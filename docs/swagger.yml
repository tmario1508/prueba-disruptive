openapi: 3.0.0
info:
  title: API Disruptive
  description: API Disruptive
  version: 1.0.0

servers:
  - url: http://localhost:3030/api/v1
    description: Local development server

paths:
  /user:
    post:
      summary: Create a new user
      description: Create a new user
      tags:
        - User
      operationId: createUser
      requestBody:
        description: User to create
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: User created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/User'
        '400':
          description: Wrong Data
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "WRONG_DATA"
                  description:
                    type: array
                    items:
                      type: object
                      properties:
                        field:
                          type: string
                          example: "Validation failed"
        '409':
          description: User already exists
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "NOT_ENOUGH_PERMISSIONS"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "INTERNAL_SERVER_ERROR"
                  description:
                    type: string
                    example: "Internal server error"
  /user/login:
    post:
      summary: Login user
      description: Login user for get token
      tags:
        - User
      requestBody:
        description: User to login
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - user
                - password
              properties:
                user:
                  type: string
                  format: email
                  example: "some@email.com"
                password:
                  type: string
                  format: password
                  example: "MyPassword1@"
      responses:
        '201':
          description: User logged in
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    example: "AJKAKJKJAKJJAKJKJAKJAJK.64665AJKAKJAKJKJAKAKJA.6465AJKAKJAKJKJAKAKJA"
        '400':
          description: Wrong Data
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "WRONG_DATA"
                  description:
                    type: array
                    items:
                      type: object
                      properties:
                        field:
                          type: string
                          example: "Validation failed"
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "UNAUTHORIZED"
                  description:
                    type: string
                    example: "wrong email or password"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "INTERNAL_SERVER_ERROR"
                  description:
                    type: string
                    example: "Internal server error"
  /user/{ id}:
    put:
      summary: Update user
      description: Update user by id
      security:
        - bearerAuth: []
      tags:
        - User
      parameters:
        - name: id
          in: path
          description: User id
          required: true
          schema:
            type: string
      requestBody:
        description: User to update
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdate'
      responses:
        '200':
          description: User updated
          content:
            application/json:
              schema:
                $ref: '#/components/responses/User'
        '400':
          description: Wrong Data
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "WRONG_DATA"
                  description:
                    type: array
                    items:
                      type: object
                      properties:
                        field:
                          type: string
                          example: "Validation failed"
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "USER_NOT_FOUND"
                  description:
                    type: string
                    example: "User not found"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "INTERNAL_SERVER_ERROR"
                  description:
                    type: string
                    example: "Internal server error"
  /user/{id}:
    get:
      summary: Get user
      description: Get user by id
      security:
        - bearerAuth: []
      tags:
        - User
      parameters:
        - name: id
          in: path
          description: User id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/User'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "USER_NOT_FOUND"
                  description:
                    type: string
                    example: "User not found"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "INTERNAL_SERVER_ERROR"
                  description:
                    type: string
                    example: "Internal server error"
  /user/{id }:
    delete:
      summary: Delete user
      description: Delete user by id
      security:
        - bearerAuth: []
      tags:
        - User
      parameters:
        - name: id
          in: path
          description: User id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "USER_DELETED"
                  description:
                    type: string
                    example: "User deleted"
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "USER_NOT_FOUND"
                  description:
                    type: string
                    example: "User not found"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "INTERNAL_SERVER_ERROR"
                  description:
                    type: string
                    example: "Internal server error"
  /topics:
    get:
      summary: Get all topics
      description: Get all topics
      security:
        - bearerAuth: []
      tags:
        - Topic
      responses:
        '200':
          description: Topics found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/responses/Topics'
        '404':
          description: Topics not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "TOPICS_NOT_FOUND"
                  description:
                    type: string
                    example: "Topics not found"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "INTERNAL_SERVER_ERROR"
                  description:
                    type: string
                    example: "Internal server error"
  /topic:
    post:
      summary: Create topic
      description: Create topic
      security:
        - bearerAuth: []
      tags:
        - Topic
      requestBody:
        description: Topic to create
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Topic'
      responses:
        '200':
          description: Topic created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Topic'
        '400':
          description: Wrong Data
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "WRONG_DATA"
                  description:
                    type: array
                    items:
                      type: object
                      properties:
                        field:
                          type: string
                          example: "Validation failed"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "INTERNAL_SERVER_ERROR"
                  description:
                    type: string
                    example: "Internal server error"
  /topic/{id}:
    update: 
      summary: Update topic
      description: Update topic by id
      security:
        - bearerAuth: []
      tags:
        - Topic
      parameters:
        - name: id
          in: path
          description: Topic id
          required: true
          schema:
            type: string
      requestBody:
        description: Topic to update
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Topic'
      responses:
        '200':
          description: Topic updated
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Topic'
        '400':
          description: Wrong Data
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "WRONG_DATA"
                  description:
                    type: array
                    items:
                      type: object
                      properties:
                        field:
                          type: string
                          example: "Validation failed"
        '404':
          description: Topic not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "TOPIC_NOT_FOUND"
                  description:
                    type: string
                    example: "Topic not found"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "INTERNAL_SERVER_ERROR"
                  description:
                    type: string
                    example: "Internal server error"
  /topig/{id }:
    get:
      summary: Get topic by id
      description: Get topic by id
      security:
        - bearerAuth: []
      tags:
        - Topic
      parameters:
        - name: id
          in: path
          description: Topic id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Topic found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Topic'
        '404':
          description: Topic not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "TOPIC_NOT_FOUND"
                  description:
                    type: string
                    example: "Topic not found"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "INTERNAL_SERVER_ERROR"
                  description:
                    type: string
                    example: "Internal server error"
  /topic/{ id}:
    delete:
      summary: Delete topic
      description: Delete topic by id
      security:
        - bearerAuth: []
      tags:
        - Topic
      parameters:
        - name: id
          in: path
          description: Topic id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Topic deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "TOPIC_DELETED"
                  description:
                    type: string
                    example: "Topic deleted"
        '404':
          description: Topic not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "TOPIC_NOT_FOUND"
                  description:
                    type: string
                    example: "Topic not found"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "INTERNAL_SERVER_ERROR"
                  description:
                    type: string
                    example: "Internal server error"
  /category:
    post:
      summary: Create category
      description: Create category
      security:
        - bearerAuth: []
      tags:
        - Category
      requestBody:
        description: Category to create
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
      responses:
        '200':
          description: Category created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Category'
        '400':
          description: Wrong Data
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "WRONG_DATA"
                  description:
                    type: array
                    items:
                      type: object
                      properties:
                        field:
                          type: string
                          example: "Validation failed"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "INTERNAL_SERVER_ERROR"
                  description:
                    type: string
                    example: "Internal server error"
  /category/{id}:
    get:
      summary: Get category by id
      description: Get category by id
      security:
        - bearerAuth: []
      tags:
        - Category
      parameters:
        - name: id
          in: path
          description: Category id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Category found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Category'
        '404':
          description: Category not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "CATEGORY_NOT_FOUND"
                  description:
                    type: string
                    example: "Category not found"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "INTERNAL_SERVER_ERROR"
                  description:
                    type: string
                    example: "Internal server error"
  /category/{ id}:
    update:
      summary: Update category
      description: Update category by id
      security:
        - bearerAuth: []
      tags:
        - Category
      parameters:
        - name: id
          in: path
          description: Category id
          required: true
          schema:
            type: string
      requestBody:
        description: Category to update
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CategoryUpdate'
      responses:
        '200':
          description: Category updated
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Category'
        '400':
          description: Wrong Data
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "WRONG_DATA"
                  description:
                    type: array
                    items:
                      type: object
                      properties:
                        field:
                          type: string
                          example: "Validation failed"
        '404':
          description: Category not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "CATEGORY_NOT_FOUND"
                  description:
                    type: string
                    example: "Category not found"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "INTERNAL_SERVER_ERROR"
                  description:
                    type: string
                    example: "Internal server error"
  /category/{id }:
    delete:
      summary: Delete category
      description: Delete category by id
      security:
        - bearerAuth: []
      tags:
        - Category
      parameters:
        - name: id
          in: path
          description: Category id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Category deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Category deleted"
        '404':
          description: Category not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "CATEGORY_NOT_FOUND"
                  description:
                    type: string
                    example: "Category not found"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "INTERNAL_SERVER_ERROR"
                  description:
                    type: string
                    example: "Internal server error"
  /categories:
    get:
      summary: Get all categories
      description: Get all categories
      security:
        - bearerAuth: []
      tags:
        - Category
      responses:
        '200':
          description: Categories found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/responses/Categories'
        '404':
          description: Categories not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "CATEGORIES_NOT_FOUND"
                  description:
                    type: string
                    example: "Categories not found"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "INTERNAL_SERVER_ERROR"
                  description:
                    type: string
                    example: "Internal server error"
  /publication:
    post:
      summary: Create publication
      description: Create publication
      security:
        - bearerAuth: []
      tags:
        - Publication
      requestBody:
        description: Publication to create
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Publication'
      responses:
        '201':
          description: Publication created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Publication'
        '400':
          description: Wrong Data
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "WRONG_DATA"
                  description:
                    type: array
                    items:
                      type: object
                      properties:
                        field:
                          type: string
                          example: "Validation failed"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "INTERNAL_SERVER_ERROR"
                  description:
                    type: string
                    example: "Internal server error"
  /publication/{id}:
    put:
      summary: Update publication
      description: Update publication by id
      security:
        - bearerAuth: []
      tags:
        - Publication
      parameters:
        - name: id
          in: path
          description: Publication id
          required: true
          schema:
            type: string
      requestBody:
        description: Publication to update
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Publication'
      responses:
        '200':
          description: Publication updated
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Publication'
        '400':
          description: Wrong Data
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "WRONG_DATA"
                  description:
                    type: array
                    items:
                      type: object
                      properties:
                        field:
                          type: string
                          example: "Validation failed"
        '404':
          description: Publication not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "PUBLICATION_NOT_FOUND"
                  description:
                    type: string
                    example: "Publication not found"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "INTERNAL_SERVER_ERROR"
                  description:
                    type: string
                    example: "Internal server error"
  /publication/{id }:
    delete:
      summary: Delete publication
      description: Delete publication by id
      security:
        - bearerAuth: []
      tags:
        - Publication
      parameters:
        - name: id
          in: path
          description: Publication id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Publication deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Publication deleted"
        '404':
          description: Publication not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "PUBLICATION_NOT_FOUND"
                  description:
                    type: string
                    example: "Publication not found"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "INTERNAL_SERVER_ERROR"
                  description:
                    type: string
                    example: "Internal server error"
  /publication/{ id}:
    get:
      summary: Get publication
      description: Get publication by id
      security:
        - bearerAuth: []
      tags:
        - Publication
      parameters:
        - name: id
          in: path
          description: Publication id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Publication found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Publication'
        '404':
          description: Publication not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "PUBLICATION_NOT_FOUND"
                  description:
                    type: string
                    example: "Publication not found"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "INTERNAL_SERVER_ERROR"
                  description:
                    type: string
                    example: "Internal server error"
  /publications:
    get:
      summary: Get publications
      description: Get publications
      security:
        - bearerAuth: []
      tags:
        - Publication
      parameters:
        - name: page
          in: query
          description: Page number
          required: false
          schema:
            type: integer
        - name: limit
          in: query
          description: Limit of publications per page
          required: false
          schema:
            type: integer
        - name: query
          in: query
          description: Query to search
          required: false
          schema:
            type: string
        - name: sort_by
          in: query
          description: Sort by field
          required: false
          schema:
            type: string
            enum:
              - title
              - topic
        - name: sort_order
          in: query
          description: Sort order
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
      responses:
        '200':
          description: Publications found
          content:
            application/json:
              schema:
                type: object
                properties:
                  publications:
                    type: array
                    items:
                      $ref: '#/components/responses/Publications'
                  total:
                    type: integer
                    example: 1
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "INTERNAL_SERVER_ERROR"
                  description:
                    type: string
                    example: "Internal server error"
components:
  securitySchemes:
    TokenDisruptive:
      type: apiKey
      in: header
      name: Authorization

  schemas:
    User:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
        password:
          type: string
          format: password
        name:
          type: string
        role:
          type: string
          enum:
            - reader
            - creator
      example:
        email: "some@email.com"
        password: "somePassword1@"
        name: "My Name"
        role: "creator"
    UserUpdate:
      type: object
      properties:
        password:
          type: string
          example: "MyPassword1@"
        name:
          type: string
          example: "My Name"
        role:
          type: string
          enum:
            - reader
            - creator
          example: "creator"
    Topic:
      type: object
      required:
        - name
        - description
        - image
      properties:
        name:
          type: string
          example: "My Topic"
        description:
          type: string
          example: "My Topic Description"
        image:
          type: string
          example: "https://someimage.com"
    Category:
      type: object
      required:
        - name
        - description
        - image
      properties:
        name:
          type: string
          example: "My Category"
        description:
          type: string
          example: "My Category Description"
        image:
          type: string
          example: "https://someimage.com"
    CategoryUpdate:
      type: object
      required:
        - name
        - description
        - image
      properties:
        name:
          type: string
          example: "My Category"
        description:
          type: string
          example: "My Category Description"
        image:
          type: string
          example: "https://someimage.com"
    Publication:
      type: object
      required:
        - title
        - description
        - topic_id
        - contents
      properties:
        title:
          type: string
          example: "My Publication"
        description:
          type: string
          example: "My Publication Description"
        topic_id:
          type: number
          example: 1
        contents:
          type: array
          items:
            type: object
            required:
              - category_id
              - content
            properties:
              category_id:
                type: number
                example: 1
              content:
                type: object
                properties:
                  text:
                    type: string
                    example: "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec auctor, nisl eget ultricies lacinia, nisl nisl aliquet nisl, eget aliquet nisl nisl eget nisl. Donec auctor, nisl eget ultricies lacinia, nisl nisl aliquet nisl, eget aliquet nisl nisl eget nisl. Donec auctor, nisl eget ultricies lacinia, nisl nisl aliquet nisl, eget aliquet nisl nisl eget nisl. Donec auctor, nisl eget ultricies lacinia, nisl nisl aliquet nisl, eget aliquet nisl nisl eget nisl. Donec auctor, nisl eget ultricies lacinia, nisl nisl aliquet nisl, eget aliquet nisl nisl eget nisl. Donec auctor, nisl eget ultricies lacinia, nisl nisl aliquet nisl, eget aliquet nisl nisl eget nisl. Donec auctor, nisl eget ultricies lacinia, nisl nisl aliquet nisl, eget aliquet nisl nisl eget nisl. Donec auctor, nisl eget ultricies lacinia, nisl nisl aliquet nisl, eget aliquet nisl nisl eget nisl. Donec auctor, nisl eget ultricies lacinia, nisl nisl aliquet nisl, eget aliquet nisl nisl eget nisl. Donec auctor, nisl eget ultricies lacinia, nisl nisl aliquet nisl, eget aliquet nisl nisl eget nisl. Donec auctor, nisl eget ultricies lacinia, nisl nisl aliquet nisl, eget aliquet nisl nisl eget nisl. Donec auctor, nisl eget ultricies lacinia, nisl nisl aliquet nisl, eget aliquet nisl nisl eget nisl. Donec auctor, nisl eget ultricies lacinia, nisl nisl aliquet nisl, eget aliquet nisl nisl eget nisl. Donec auctor, nisl eget ultricies lacinia, nisl nisl aliquet nisl, eget aliquet nisl nisl eget nisl. Donec auctor, nisl eget ultricies lacinia, n"
                  url:
                    type: string
                    example: "https://someimageorvideo.com"
  responses:
    User:
      type: object
      properties:
        id:
          type: number
          example: 1
        email:
          type: string
          example: "some@email.com"
        name:
          type: string
          example: "My Name"
        role:
          type: string
          example: "creator"
        user_name:
          type: string
          example: "myname00"
    Topic:
      type: object
      properties:
        id: 
          type: number
          example: 1
        name:
          type: string
          example: "My Topic"
        description:
          type: string
          example: "My Topic Description"
        image:
          type: string
          example: "https://someimage.com"
    Topics:
      type: array
      items:
        type: object
        properties:
          name:
            type: string
            example: "My Topic"
          description:
            type: string
            example: "My Topic Description"
          id:
            type: number
            example: 1
          image:
            type: string
            example: "https://someimage.com"
    Category:
      type: object
      properties:
        id:
          type: number
          example: 1
        name:
          type: string
          example: "My Category"
        description:
          type: string
          example: "My Category Description"
        image:
          type: string
          example: "https://someimage.com"
        content_type:
          type: string
          example: "url"
    Categories:
      type: array
      items:
        type: object
        properties:
          name:
            type: string
            example: "My Category"
          description:
            type: string
            example: "My Category Description"
          id:
            type: number
            example: 1
          image:
            type: string
            example: "https://someimage.com"
          content_type:
            type: string
            example: "url"
    Publication:
      type: object
      properties:
        id:
          type: number
          example: 1
        title:
          type: string
          example: "My Publication"
        description:
          type: string
          example: "My Publication Description"
        topic: 
          type: string
          example: "Deportes"
        credits:
          type: string
          example: "mario15"
        contents:
          type: array
          items:
            type: object
            properties:
              category:
                type: string
                example: "Videos"
              content:
                type: object
                properties:
                  url:
                    type: string
                    example: "https://someurl.com"
                  text:
                    type: string
                    example: "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec auctor, nisl eget ultricies lacinia, nisl nisl aliquet nisl, eget aliquet nisl nisl sit amet nisl. Donec auctor, nisl eget ultricies lacinia, nisl nisl aliquet nisl, eget aliquet nisl nisl sit amet nisl. Donec auctor, nisl eget ultricies lacinia, nisl nisl aliquet nisl, eget aliquet nisl nisl sit amet nisl. Donec auctor, nisl eget ultricies lacinia, nisl nisl aliquet nisl, eget aliquet nisl nisl sit amet nisl. Donec auctor, nisl eget ultricies lacinia, nisl nisl aliquet nisl, eget aliquet nisl nisl sit amet nisl. Donec auctor, nisl eget ultricies lacinia, nisl nisl aliquet nisl, eget aliquet nisl nisl sit amet nisl. Donec auctor, nisl eget ultricies lacinia, nisl nisl aliquet nisl, eget aliquet nisl nisl sit amet nisl. Donec auctor, nisl eget ultricies lacinia, nisl nisl aliquet nisl, eget aliquet nisl nisl sit amet nisl. Donec auctor, nisl eget ultricies lacinia, nisl nisl aliquet nisl, eget aliquet nisl nisl sit amet nisl. Donec auctor, nisl eget ultricies lacinia, nisl nisl aliquet nisl, eget aliquet nisl nisl sit amet nisl. Donec auctor, nisl eget ultricies lacinia, nisl nisl aliquet nisl, eget aliquet nisl nisl sit amet nisl. Donec auctor, nisl eget ultricies lacinia, nisl nisl aliquet nisl, eget aliquet nisl nisl sit amet nisl. Donec auctor, nisl eget ultricies lacinia, nisl nisl aliquet nisl, eget aliquet nisl nisl sit amet nisl. Donec auctor, nisl eget ultricies lacinia, nisl nisl aliquet nisl, eget aliquet nisl nisl sit amet nisl. Done"
    Publications:
      type: object
      properties:
        data:
          type: array
          items:
            type: object
            properties:
              id:
                type: number
                example: 1
              title:
                type: string
                example: "My Publication"
              description:
                type: string
                example: "My Publication Description"
              topic: 
                type: string
                example: "Deportes"
              credits:
                type: string
                example: "mario15"
              contents:
                type: array
                items:
                  type: object
                  properties:
                    category:
                      type: string
                      example: "Videos"
                    content:
                      type: object
                      properties:
                        url:
                          type: string
                          example: "https://someurl.com"
                        text:
                          type: string
                          example: "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec auctor, nisl eget ultricies lacinia, nisl nisl aliquet nisl, eget aliquet nisl nisl sit amet nisl. Donec auctor, nisl eget ultricies lacinia, nisl nisl aliquet nisl, eget aliquet nisl nisl sit amet nisl. Donec auctor, nisl eget ultricies lacinia, nisl nisl aliquet nisl, eget aliquet nisl nisl sit amet nisl. Donec auctor, nisl eget ultricies lacinia, nisl nisl aliquet nisl, eget aliquet nisl nisl sit amet nisl. Donec auctor, nisl eget ultricies lacinia, nisl nisl aliquet nisl, eget aliquet nisl nisl sit amet nisl. Donec auctor, nisl eget ultricies lacinia, nisl nisl aliquet nisl, eget aliquet nisl nisl sit amet nisl. Donec auctor, nisl eget ultricies lacinia, nisl nisl aliquet nisl, eget aliquet nisl nisl sit amet nisl. Donec auctor, nisl eget ultricies lacinia, nisl nisl aliquet nisl, eget aliquet nisl nisl sit amet nisl. Donec auctor, nisl eget ultricies lacinia, nisl nisl aliquet nisl, eget aliquet nisl nisl sit amet nisl. Donec auctor, nisl eget ultricies lacinia, nisl nisl aliquet nisl, eget aliquet nisl nisl sit amet nisl. Donec auctor, nisl eget ultricies lacinia, nisl nisl aliquet nisl, eget aliquet nisl nisl sit amet nisl. Donec auctor, nisl eget ultricies lacinia, nisl nisl aliquet nisl, eget aliquet nisl nisl sit amet nisl. Donec auctor, nisl eget ultricies lacinia, nisl nisl aliquet nisl, eget aliquet nisl nisl sit amet nisl. Done"
        total:
          type: number
          example: 1
