openapi: 3.0.0
info:
  title: API Disruptive
  description: API Disruptive
  version: 1.0.0

servers:
  - url: http://localhost:3030/api/v1
    description: Local development server

paths:
  /user:
    post:
      summary: Create a new user
      description: Create a new user
      tags:
        - User
      operationId: createUser
      requestBody:
        description: User to create
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: User created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/User'
        '400':
          description: Wrong Data
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "WRONG_DATA"
                  description:
                    type: array
                    items:
                      type: object
                      properties:
                        field:
                          type: string
                          example: "Validation failed"
        '409':
          description: User already exists
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "NOT_ENOUGH_PERMISSIONS"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "INTERNAL_SERVER_ERROR"
                  description:
                    type: string
                    example: "Internal server error"
  /user/login:
    post:
      summary: Login user
      description: Login user for get token
      tags:
        - User
      requestBody:
        description: User to login
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - user
                - password
              properties:
                user:
                  type: string
                  format: email
                  example: "some@email.com"
                password:
                  type: string
                  format: password
                  example: "MyPassword1@"
      responses:
        '201':
          description: User logged in
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    example: "AJKAKJKJAKJJAKJKJAKJAJK.64665AJKAKJAKJKJAKAKJA.6465AJKAKJAKJKJAKAKJA"
        '400':
          description: Wrong Data
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "WRONG_DATA"
                  description:
                    type: array
                    items:
                      type: object
                      properties:
                        field:
                          type: string
                          example: "Validation failed"
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "UNAUTHORIZED"
                  description:
                    type: string
                    example: "wrong email or password"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "INTERNAL_SERVER_ERROR"
                  description:
                    type: string
                    example: "Internal server error"
  /user/{ id}:
    put:
      summary: Update user
      description: Update user by id
      tags:
        - User
      parameters:
        - name: id
          in: path
          description: User id
          required: true
          schema:
            type: string
      requestBody:
        description: User to update
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdate'
      responses:
        '200':
          description: User updated
          content:
            application/json:
              schema:
                $ref: '#/components/responses/User'
        '400':
          description: Wrong Data
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "WRONG_DATA"
                  description:
                    type: array
                    items:
                      type: object
                      properties:
                        field:
                          type: string
                          example: "Validation failed"
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "USER_NOT_FOUND"
                  description:
                    type: string
                    example: "User not found"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "INTERNAL_SERVER_ERROR"
                  description:
                    type: string
                    example: "Internal server error"
  /user/{id}:
    get:
      summary: Get user
      description: Get user by id
      tags:
        - User
      parameters:
        - name: id
          in: path
          description: User id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/User'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "USER_NOT_FOUND"
                  description:
                    type: string
                    example: "User not found"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "INTERNAL_SERVER_ERROR"
                  description:
                    type: string
                    example: "Internal server error"
  /user/{id }:
    delete:
      summary: Delete user
      description: Delete user by id
      tags:
        - User
      parameters:
        - name: id
          in: path
          description: User id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "USER_DELETED"
                  description:
                    type: string
                    example: "User deleted"
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "USER_NOT_FOUND"
                  description:
                    type: string
                    example: "User not found"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "INTERNAL_SERVER_ERROR"
                  description:
                    type: string
                    example: "Internal server error"
  /topics:
    get:
      summary: Get all topics
      description: Get all topics
      tags:
        - Topic
      responses:
        '200':
          description: Topics found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/responses/Topics'
        '404':
          description: Topics not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "TOPICS_NOT_FOUND"
                  description:
                    type: string
                    example: "Topics not found"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "INTERNAL_SERVER_ERROR"
                  description:
                    type: string
                    example: "Internal server error"
  /topic:
    post:
      summary: Create topic
      description: Create topic
      tags:
        - Topic
      requestBody:
        description: Topic to create
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Topic'
      responses:
        '200':
          description: Topic created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Topic'
        '400':
          description: Wrong Data
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "WRONG_DATA"
                  description:
                    type: array
                    items:
                      type: object
                      properties:
                        field:
                          type: string
                          example: "Validation failed"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "INTERNAL_SERVER_ERROR"
                  description:
                    type: string
                    example: "Internal server error"
  /topic/{id}:
    update: 
      summary: Update topic
      description: Update topic by id
      tags:
        - Topic
      parameters:
        - name: id
          in: path
          description: Topic id
          required: true
          schema:
            type: string
      requestBody:
        description: Topic to update
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Topic'
      responses:
        '200':
          description: Topic updated
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Topic'
        '400':
          description: Wrong Data
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "WRONG_DATA"
                  description:
                    type: array
                    items:
                      type: object
                      properties:
                        field:
                          type: string
                          example: "Validation failed"
        '404':
          description: Topic not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "TOPIC_NOT_FOUND"
                  description:
                    type: string
                    example: "Topic not found"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "INTERNAL_SERVER_ERROR"
                  description:
                    type: string
                    example: "Internal server error"
  /topig/{id }:
    get:
      summary: Get topic by id
      description: Get topic by id
      tags:
        - Topic
      parameters:
        - name: id
          in: path
          description: Topic id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Topic found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Topic'
        '404':
          description: Topic not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "TOPIC_NOT_FOUND"
                  description:
                    type: string
                    example: "Topic not found"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "INTERNAL_SERVER_ERROR"
                  description:
                    type: string
                    example: "Internal server error"
  /topic/{ id}:
    delete:
      summary: Delete topic
      description: Delete topic by id
      tags:
        - Topic
      parameters:
        - name: id
          in: path
          description: Topic id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Topic deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "TOPIC_DELETED"
                  description:
                    type: string
                    example: "Topic deleted"
        '404':
          description: Topic not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "TOPIC_NOT_FOUND"
                  description:
                    type: string
                    example: "Topic not found"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "INTERNAL_SERVER_ERROR"
                  description:
                    type: string
                    example: "Internal server error"
components:
  securitySchemes:
    bearerAuth:
      type: apiKey
      scheme: bearer
      bearerFormat: JWT
      in: header
      name: Authorization

  schemas:
    User:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
        password:
          type: string
          format: password
        name:
          type: string
        role:
          type: string
          enum:
            - reader
            - creator
      example:
        email: "some@email.com"
        password: "somePassword1@"
        name: "My Name"
        role: "creator"
    UserUpdate:
      type: object
      properties:
        password:
          type: string
          example: "MyPassword1@"
        name:
          type: string
          example: "My Name"
        role:
          type: string
          enum:
            - reader
            - creator
          example: "creator"
    Topic:
      type: object
      required:
        - name
        - description
        - image
      properties:
        name:
          type: string
          example: "My Topic"
        description:
          type: string
          example: "My Topic Description"
        image:
          type: string
          example: "https://someimage.com"
  responses:
    User:
      type: object
      properties:
        id:
          type: number
          example: 1
        email:
          type: string
          example: "some@email.com"
        name:
          type: string
          example: "My Name"
        role:
          type: string
          example: "creator"
        user_name:
          type: string
          example: "myname00"
    Topic:
      type: object
      properties:
        id: 
          type: number
          example: 1
        name:
          type: string
          example: "My Topic"
        description:
          type: string
          example: "My Topic Description"
        image:
          type: string
          example: "https://someimage.com"
    Topics:
      type: array
      items:
        type: object
        properties:
          name:
            type: string
            example: "My Topic"
          description:
            type: string
            example: "My Topic Description"
          id:
            type: number
            example: 1
          image:
            type: string
            example: "https://someimage.com"

